/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.winestores.views;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import lk.ijse.winestores.controller.ControllerFactory;
import lk.ijse.winestores.controller.SuperController;
import lk.ijse.winestores.controller.custom.SupplierController;
import lk.ijse.winestores.dao.dto.SupplierDTO;

/**
 *
 * @author Ranjith Suranga
 */
public class Suppliers extends javax.swing.JPanel {

    private SuraButton sb;                          // Holds the SuraButton instance
    private SuraTable st;                           // Holds the SuraTable instance

    private DefaultTableModel dtm;                  // Holds the default table model
    private ArrayList<SupplierDTO> suppliers;       // Holds all the current suppliers

    /**
     * Creates new form Suppliers
     */
    public Suppliers() {
        initComponents();
        init();
        loadSuppliers();
    }

    private void init() {

        sb = new SuraButton(this);
        sb.convertAllJButtonsToSuraButtons();

        st = new SuraTable(tblSuppliers);
        dtm = (DefaultTableModel) tblSuppliers.getModel();
        for (int i = 0; i < dtm.getColumnCount(); i++) {
            if (i == 2 || i == 3) {
                continue;
            }
            st.setHeaderAlignment(i, SwingConstants.CENTER);
        }

        for (int i = 0; i < dtm.getColumnCount() - 1; i++) {
            if (i == 1 || i == 2) {
                continue;
            }
            st.setColumnAlignment(i, SwingConstants.CENTER);
        }

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                txtSearch.requestFocusInWindow();
            }
        });

        tblSuppliers.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {

                if (tblSuppliers.getSelectedRow() == -1) {
                    return;
                }

                btnEdit.setEnabled(true);
            }
        });

        dtm.addTableModelListener(new TableModelListener() {

            @Override
            public void tableChanged(TableModelEvent e) {
                btnDelete.setEnabled(false);

                for (int i = 0; i < dtm.getRowCount(); i++) {

                    if ((boolean) dtm.getValueAt(i, 0) == true) {
                        btnDelete.setEnabled(true);
                        break;
                    }

                }
            }
        });

    }

    private void loadSuppliers() {

        // Let's clear all the rows first
        dtm.setRowCount(0);

        SupplierController ctrl = (SupplierController) ControllerFactory.getInstance().getController(SuperController.ControllerType.SUPPLIER);

        try {
            suppliers = ctrl.getSuppliers(txtSearch.getText().trim());

            // If no matching suppliers have been found
            if (suppliers == null) {
                return;
            }

            // Yep, we got some suppliers, let's show them then
            for (SupplierDTO supplier : suppliers) {
                Object[] rowData = {false,
                    supplier.getSupplierId(),
                    supplier.getName(),
                    supplier.getAddress(),
                    supplier.getContact(),
                    supplier.getFax(),
                    supplier.getEmail(),
                    supplier.getCordintatorName(),
                    supplier.getCordinatorContact(),
                    supplier.getAgentName(),
                    supplier.getAgenNo(),
                    supplier.getSupplierAdded()
                };
                dtm.addRow(rowData);
            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSuppliers = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setDisplayedMnemonic('S');
        jLabel1.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel1.setLabelFor(txtSearch);
        jLabel1.setText("Search by Supplier Name");
        jLabel1.setDisplayedMnemonicIndex(10);

        txtSearch.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnNew.setBackground(new java.awt.Color(72, 158, 231));
        btnNew.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnNew.setForeground(new java.awt.Color(255, 255, 255));
        btnNew.setMnemonic('N');
        btnNew.setText("New");
        btnNew.setToolTipText("Click to add a new supplier");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnEdit.setBackground(new java.awt.Color(240, 173, 78));
        btnEdit.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnEdit.setForeground(new java.awt.Color(255, 255, 255));
        btnEdit.setMnemonic('E');
        btnEdit.setText("Edit");
        btnEdit.setToolTipText("Click to edit the selected supplier details");
        btnEdit.setEnabled(false);
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(251, 93, 93));
        btnDelete.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setMnemonic('D');
        btnDelete.setText("Delete");
        btnDelete.setToolTipText("Check one or more supplier(s) to delete");
        btnDelete.setEnabled(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel2.setDisplayedMnemonic('L');
        jLabel2.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        jLabel2.setLabelFor(tblSuppliers);
        jLabel2.setText("List of Suppliers");

        jPanel1.setBackground(new java.awt.Color(233, 236, 242));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 0, 0, 0, new java.awt.Color(220, 225, 234)));

        jPanel2.setBackground(new java.awt.Color(233, 236, 242));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(220, 225, 234), 2));

        jScrollPane1.setBackground(new java.awt.Color(233, 236, 242));

        tblSuppliers.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        tblSuppliers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "ID", "Name", "Address", "Telephone Number", "Fax Number", "E-mail", "Coordinator's Name", "Coordinator's Phone Number", "Agent Name", "Agent Number", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSuppliers.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblSuppliers.setGridColor(new java.awt.Color(233, 236, 242));
        tblSuppliers.setRowHeight(50);
        tblSuppliers.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblSuppliers.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tblSuppliers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblSuppliers.getTableHeader().setReorderingAllowed(false);
        tblSuppliers.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblSuppliersFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tblSuppliersFocusLost(evt);
            }
        });
        tblSuppliers.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblSuppliersKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblSuppliers);
        if (tblSuppliers.getColumnModel().getColumnCount() > 0) {
            tblSuppliers.getColumnModel().getColumn(0).setMinWidth(40);
            tblSuppliers.getColumnModel().getColumn(0).setPreferredWidth(40);
            tblSuppliers.getColumnModel().getColumn(0).setMaxWidth(40);
            tblSuppliers.getColumnModel().getColumn(1).setMinWidth(100);
            tblSuppliers.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblSuppliers.getColumnModel().getColumn(1).setMaxWidth(100);
            tblSuppliers.getColumnModel().getColumn(2).setPreferredWidth(355);
            tblSuppliers.getColumnModel().getColumn(3).setPreferredWidth(300);
            tblSuppliers.getColumnModel().getColumn(4).setPreferredWidth(175);
            tblSuppliers.getColumnModel().getColumn(5).setPreferredWidth(152);
            tblSuppliers.getColumnModel().getColumn(6).setPreferredWidth(250);
            tblSuppliers.getColumnModel().getColumn(7).setPreferredWidth(350);
            tblSuppliers.getColumnModel().getColumn(8).setPreferredWidth(250);
            tblSuppliers.getColumnModel().getColumn(9).setPreferredWidth(350);
            tblSuppliers.getColumnModel().getColumn(10).setPreferredWidth(150);
            tblSuppliers.getColumnModel().getColumn(11).setPreferredWidth(200);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 571, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtSearch)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete, btnEdit, btnNew});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete, btnEdit});

    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        Main m = (Main) SwingUtilities.getWindowAncestor(this);
        m.pnlContainer.removeAll();
        SaveSupplier s = new SaveSupplier();
        m.pnlContainer.add(s);
        m.pnlContainer.updateUI();
    }//GEN-LAST:event_btnNewActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        loadSuppliers();
    }//GEN-LAST:event_txtSearchKeyReleased

    private void tblSuppliersFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblSuppliersFocusLost
        // For rare reason
        if (dtm.getRowCount() == 0 || tblSuppliers.getSelectedRow() == -1) {
            btnEdit.setEnabled(false);
        }
    }//GEN-LAST:event_tblSuppliersFocusLost

    private void tblSuppliersKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblSuppliersKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_SPACE) {

            if (dtm.getRowCount() > 0) {
                boolean currentStatus = (boolean) dtm.getValueAt(tblSuppliers.getSelectedRow(), 0);
                dtm.setValueAt(!currentStatus, tblSuppliers.getSelectedRow(), 0);
                evt.consume();
            }
        }else if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            
            if (dtm.getRowCount() > 0){
                int selectedIndex = tblSuppliers.getSelectedRow();
                
                if (selectedIndex != -1 && btnEdit.isEnabled()){
                    btnEdit.doClick();
                }
            }
            
        }
    }//GEN-LAST:event_tblSuppliersKeyPressed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        SupplierController ctrl = (SupplierController) ControllerFactory.getInstance().getController(SuperController.ControllerType.SUPPLIER);

        for (int i = 0; i < dtm.getRowCount(); i++) {

            boolean delete = (boolean) dtm.getValueAt(i, 0);
            if (delete) {
                try {
                    int result = ctrl.removeSupplier((String) dtm.getValueAt(i, 1));
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SQLException ex) {

                    // Error Code 1451 means it has some referenced in other tables
                    if (ex.getErrorCode() == 1451) {
                        ImageIcon icon = new ImageIcon(this.getClass().getResource("/lk/ijse/winestores/icons/error_icon.png"));
                        JOptionPane.showMessageDialog(SwingUtilities.getWindowAncestor(this), "Sorry, you can't delete Supplier ID: '" + (String) dtm.getValueAt(i, 1) + "' at the moment because it is related with some GRNs or Supplier Orders.", "Supplier already in use", JOptionPane.INFORMATION_MESSAGE, icon);
                    } else {
                        Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }

        loadSuppliers();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed

        if (tblSuppliers.getSelectedRow() == -1) {
            return;
        }

        Main m = (Main) SwingUtilities.getWindowAncestor(this);
        m.pnlContainer.removeAll();
        SaveSupplier s = new SaveSupplier(suppliers.get(tblSuppliers.getSelectedRow()));
        m.pnlContainer.add(s);
        m.pnlContainer.updateUI();

    }//GEN-LAST:event_btnEditActionPerformed

    private void tblSuppliersFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblSuppliersFocusGained

        if (tblSuppliers.getSelectedRow() == -1) {
            tblSuppliers.getSelectionModel().setSelectionInterval(0, 0);
        }

    }//GEN-LAST:event_tblSuppliersFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblSuppliers;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
