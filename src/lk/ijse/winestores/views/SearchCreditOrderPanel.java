/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.winestores.views;

import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Cursor;
import java.sql.SQLException;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import lk.ijse.winestores.controller.ControllerFactory;
import lk.ijse.winestores.controller.SuperController;
import lk.ijse.winestores.controller.custom.QueryController;
import lk.ijse.winestores.dao.dto.CreditOrderDTO;
import lk.ijse.winestores.views.util.FocusHandler;

/**
 *
 * @author Ranjith Suranga
 */
public class SearchCreditOrderPanel extends javax.swing.JPanel implements FocusHandler {

    private SuraTable stbl;

    private ArrayList<CreditOrderDTO> creditOrders;

    private DefaultTableModel dtm;

    private QueryController ctrlQuery;
    
    private SearchCreditOrder searchCreditOrder;

    /**
     * Creates new form SearchCreditOrderPanel
     */
    public SearchCreditOrderPanel(SearchCreditOrder searchCreditOrder, ArrayList<CreditOrderDTO> creditOrders, String searchTitle) {
        initComponents();

        this.creditOrders = creditOrders;
        
        this.searchCreditOrder =  searchCreditOrder;

        lblSearchTitle.setText(searchTitle);

        stbl = new SuraTable(tblCreditOrders);
        for (int i = 0; i < tblCreditOrders.getColumnCount(); i++) {
            stbl.setHeaderAlignment(i, SwingConstants.CENTER);
            stbl.setColumnAlignment(i, SwingConstants.CENTER);
        }

        ctrlQuery = (QueryController) ControllerFactory.getInstance().getController(SuperController.ControllerType.QUERY);

        dtm = (DefaultTableModel) tblCreditOrders.getModel();
        dtm.setRowCount(0);

        for (CreditOrderDTO creditOrder : creditOrders) {
            try {

                Object[] rowData = {
                    creditOrder.getOrderId(),
                    ctrlQuery.getCustomer(Integer.parseInt(creditOrder.getCustomerId())).getCustomerName(),
                    formatDate(creditOrder.getOrderDate()),
                    formatPrice(creditOrder.getTotal()),
                    "<html><div style='color:WHITE;background-color:rgb(72,158,231);padding:5px 10px;'>View</div></html>"
                };
                dtm.addRow(rowData);

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(SearchCreditOrderPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(SearchCreditOrderPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private String formatPrice(double price) {
        NumberFormat nf = NumberFormat.getInstance();
        nf.setMaximumFractionDigits(2);
        nf.setMinimumFractionDigits(2);
        nf.setGroupingUsed(false);
        return nf.format(price);
    }

    private String formatDate(String Date) {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            Date d = sdf.parse(Date);
            return sdf.format(d);
        } catch (ParseException ex) {
            Logger.getLogger(SearchCreditOrderPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    private void showCreditOrder() {
        
        Cursor cursor = tblCreditOrders.getCursor();
        tblCreditOrders.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        
        JPanel pnlContainer = searchCreditOrder.pnlContainer;
        pnlContainer.removeAll();
        
        int orderId = Integer.parseInt( dtm.getValueAt(tblCreditOrders.getSelectedRow(), 0).toString());

        SearchCreditOrderContainer pnlOrder = new SearchCreditOrderContainer(orderId);
        pnlOrder.setSize(pnlContainer.getSize());
        pnlContainer.add(pnlOrder);

        pnlContainer.updateUI();
        
        searchCreditOrder.initFoucs();
        
        tblCreditOrders.setCursor(cursor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSearchTitle = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane(){
            {
                this.getViewport().setBackground(Color.WHITE);
            }
        };
        tblCreditOrders = new javax.swing.JTable();

        setBackground(new java.awt.Color(232, 235, 241));

        lblSearchTitle.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        lblSearchTitle.setText("We have found 2 credit orders related with this Customer Name \"Suranga\". Please select one to view.");

        jPanel1.setBackground(new java.awt.Color(232, 235, 241));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(220, 225, 234)));

        jScrollPane1.setBackground(new java.awt.Color(232, 235, 241));
        jScrollPane1.setBorder(null);

        tblCreditOrders.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        tblCreditOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Order ID", "Customer Name", "Date", "Total", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCreditOrders.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblCreditOrders.setGridColor(new java.awt.Color(204, 204, 204));
        tblCreditOrders.setRowHeight(50);
        tblCreditOrders.setSelectionBackground(new java.awt.Color(204, 204, 204));
        tblCreditOrders.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tblCreditOrders.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblCreditOrders.getTableHeader().setReorderingAllowed(false);
        tblCreditOrders.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblCreditOrdersFocusGained(evt);
            }
        });
        tblCreditOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCreditOrdersMouseClicked(evt);
            }
        });
        tblCreditOrders.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblCreditOrdersKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblCreditOrders);
        if (tblCreditOrders.getColumnModel().getColumnCount() > 0) {
            tblCreditOrders.getColumnModel().getColumn(0).setMinWidth(120);
            tblCreditOrders.getColumnModel().getColumn(0).setPreferredWidth(120);
            tblCreditOrders.getColumnModel().getColumn(0).setMaxWidth(120);
            tblCreditOrders.getColumnModel().getColumn(2).setMinWidth(200);
            tblCreditOrders.getColumnModel().getColumn(2).setPreferredWidth(200);
            tblCreditOrders.getColumnModel().getColumn(2).setMaxWidth(200);
            tblCreditOrders.getColumnModel().getColumn(3).setMinWidth(150);
            tblCreditOrders.getColumnModel().getColumn(3).setPreferredWidth(150);
            tblCreditOrders.getColumnModel().getColumn(3).setMaxWidth(150);
            tblCreditOrders.getColumnModel().getColumn(4).setMinWidth(200);
            tblCreditOrders.getColumnModel().getColumn(4).setPreferredWidth(200);
            tblCreditOrders.getColumnModel().getColumn(4).setMaxWidth(200);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblSearchTitle)
                        .addGap(0, 77, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSearchTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblCreditOrdersFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblCreditOrdersFocusGained
        if (tblCreditOrders.getSelectedRow() == -1 && dtm.getRowCount() > 0) {
            tblCreditOrders.getSelectionModel().setSelectionInterval(0, 0);
        }
    }//GEN-LAST:event_tblCreditOrdersFocusGained

    private void tblCreditOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCreditOrdersMouseClicked

        int col = tblCreditOrders.columnAtPoint(evt.getPoint());
        if (col == 4) {
            showCreditOrder();
        }

    }//GEN-LAST:event_tblCreditOrdersMouseClicked

    private void tblCreditOrdersKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblCreditOrdersKeyPressed

        if (tblCreditOrders.getSelectedRow() != -1) {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                showCreditOrder();
                evt.consume();
            }
        }

    }//GEN-LAST:event_tblCreditOrdersKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblSearchTitle;
    private javax.swing.JTable tblCreditOrders;
    // End of variables declaration//GEN-END:variables

    @Override
    public void initFoucs() {
        tblCreditOrders.requestFocusInWindow();
    }
}
